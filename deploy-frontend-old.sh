#!/bin/bash
set -euo pipefail

REPO="$HOME/git/frontend-git"
DEST="/opt/docker/nginx/html"

echo "‚û°Ô∏è  Gehe ins Repo ‚Ä¶"
cd "$REPO"

# ‚¨ÖÔ∏è NEU: TRANSIFEX_* aus .env.local ins Environment laden
export $(grep -E '^(TRANSIFEX_TOKEN|TRANSIFEX_SECRET)=' .env.local | xargs)

echo "‚¨áÔ∏è  Pull main ‚Ä¶"
git pull --ff-only origin main

echo "üì¶ npm ci ‚Ä¶"
npm ci

echo "‚öôÔ∏è  Build (inkl. tx:pull) ‚Ä¶"
npm run build   # package.json ruft intern `tx:pull` auf

# Build-Output pr√ºfen
if [ ! -d "$REPO/out" ]; then
  echo "‚ùå Build-Ausgabe fehlt: $REPO/out existiert nicht."
  exit 1
fi

echo "üìÅ Stelle Zielstruktur sicher ‚Ä¶"
sudo mkdir -p \
  "$DEST" \
  "$DEST/locales" \
  "$DEST/images"

echo "üöÄ Sync Build (out/ ‚Üí html/) mit --delete ‚Ä¶"
sudo rsync -av --delete --checksum --human-readable "$REPO/out/" "$DEST/"

echo "üó£Ô∏è  Sync Locales (inkrementell) ‚Ä¶"
if [ -d "$REPO/locales" ]; then
  sudo rsync -av --checksum --human-readable \
    --include="*.json" --exclude="*" \
    "$REPO/locales/" "$DEST/locales/"

  # optionale Aliase (falls nur fr_CH/de_CH geliefert werden)
  [ -f "$DEST/locales/de_CH.json" ] && sudo cp -f "$DEST/locales/de_CH.json" "$DEST/locales/de.json" || true
  [ -f "$DEST/locales/fr_CH.json" ] && sudo cp -f "$DEST/locales/fr_CH.json" "$DEST/locales/fr.json" || true
else
  echo "‚ÑπÔ∏è  Keine locales/ gefunden ‚Äì √úberspringe."
fi

echo "üñºÔ∏è  Sync Images (inkrementell) ‚Ä¶"
if [ -d "$REPO/public/images" ]; then
  sudo rsync -av --checksum --human-readable "$REPO/public/images/" "$DEST/images/"
else
  echo "‚ÑπÔ∏è  Keine public/images gefunden ‚Äì √úberspringe."
fi

echo "‚úÖ Deployment fertig."
